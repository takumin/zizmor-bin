name: Sign
on:
  workflow_call:
permissions: {}
concurrency:
  group: sign-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}
jobs:
  sign:
    name: Sign
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      id-token: write
      attestations: write
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
      with:
        path: dist/
        pattern: artifact-*
        merge-multiple: true
    - name: Check artifacts
      shell: bash -euo pipefail {0}
      run: tree --charset ASCII dist/
    - name: Verify sha256sum
      shell: bash -euo pipefail {0}
      run: |-
        echo 'Verify sha256sum'
        cd dist
        for f in $(find . -type f -name '*.sha256sum' -printf '%f\n' | sort); do
          sha256sum -c "$f"
        done
    - name: Merge sha256sum
      shell: bash -euo pipefail {0}
      run: |-
        echo 'Merge sha256sums'
        cd dist
        echo -n > SHA256SUMS
        for f in $(find . -type f -name '*.sha256sum' -printf '%f\n' | sort); do
          < "$f" tee -a SHA256SUMS
          rm "$f"
        done
    - name: Verify sha256sums
      shell: bash -euo pipefail {0}
      run: |-
        echo 'Verify sha256sums'
        cd dist
        sha256sum -c SHA256SUMS
    - name: Generate artifact attestation
      if: ${{ !startsWith(github.event_name, 'pull') }}
      uses: actions/attest-build-provenance@e8998f949152b193b063cb0ec769d69d929409be # v2.4.0
      with:
        subject-path: 'dist/*'
    - name: Setup cosign
      if: ${{ !startsWith(github.event_name, 'pull') }}
      uses: sigstore/cosign-installer@d58896d6a1865668819e1d91763c7751a165e159 # v3.9.2
    - name: Generate code signing with cosign
      if: ${{ !startsWith(github.event_name, 'pull') }}
      shell: bash -euo pipefail {0}
      run: |-
        echo 'Generate code signing with cosign'
        cd dist
        for f in $(find . -type f -printf '%f\n' | sort); do
          cosign sign-blob "$f" -y --output-certificate "$f.cert" --output-signature "$f.sig"
        done
    - name: Check artifacts
      shell: bash -euo pipefail {0}
      run: tree --charset ASCII dist/
    - name: Upload artifacts
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: release-artifacts
        path: 'dist/*'
