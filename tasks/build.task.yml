# https://taskfile.dev
# yaml-language-server: $schema=https://taskfile.dev/schema.json

version: '3'

set: [pipefail]
shopt: [globstar]

vars:
  LATEST_VERSION:
    sh: coreutils test -f version.json && jq -r '.version' version.json || echo 'unknown'
  BUILD_TARGET: '{{env "BUILD_TARGET" | default "x86_64-unknown-linux-musl"}}'
  MATRIX_TARGETS:
  - aarch64-apple-darwin
  - aarch64-pc-windows-gnullvm
  - aarch64-unknown-linux-musl
  - x86_64-apple-darwin
  - x86_64-pc-windows-gnullvm
  - x86_64-unknown-linux-musl

includes:
  tool:
    taskfile: tool.task.yml
    internal: true

tasks:
  default:
    desc: '{{.TASK}}'
    silent: true
    cmds:
    - task: sha256sum:verify

  matrix:
    desc: '{{.TASK}}'
    silent: true
    deps:
    - task: tool:aqua:tag:jq
    vars:
      VERSION: '{{env "BUILD_VERSION" | default .LATEST_VERSION}}'
    cmds:
    - >-
      echo '{{ .MATRIX_TARGETS | toJson }}'
      | jq -cM '{include: map({version: "{{.VERSION}}", target: .})}'

  version:
    desc: '{{.TASK}}'
    silent: true
    vars:
      VERSION: '{{env "BUILD_VERSION" | default .LATEST_VERSION}}'
    cmds:
    - echo '{{.VERSION}}'

  name:
    desc: '{{.TASK}}'
    silent: true
    cmds:
    - echo 'zizmor-{{.BUILD_TARGET}}'

  binname:
    desc: '{{.TASK}}'
    silent: true
    vars:
      EXE: '{{if contains "-windows-" .BUILD_TARGET}}.exe{{end}}'
    cmds:
    - echo '{{.BINNAME}}'
    # - echo 'zizmor-{{.BUILD_TARGET}}{{.EXE}}'

  binpath:
    desc: '{{.TASK}}'
    silent: true
    vars:
      EXE: '{{if contains "-windows-" .BUILD_TARGET}}.exe{{end}}'
      VERSION: '{{env "BUILD_VERSION" | default .LATEST_VERSION}}'
    cmds:
    - echo '.build/{{.VERSION}}/target/{{.BUILD_TARGET}}/release/zizmor{{.EXE}}'

  download:
    desc: '{{.TASK}}'
    dir: '{{.ROOT_DIR}}'
    deps:
    - task: tool:aqua:tag:jq
    vars:
      VERSION: '{{env "BUILD_VERSION" | default .LATEST_VERSION}}'
    status:
    - coreutils test -f '{{.ROOT_DIR}}/.build/zizmor-{{.VERSION}}.tar.gz'
    cmds:
    - cmd: coreutils mkdir -p '{{.ROOT_DIR}}/.build/{{.VERSION}}'
      silent: true
    # TODO: which curl command
    - >-
      curl -fsSLo '{{.ROOT_DIR}}/.build/zizmor-{{.VERSION}}.tar.gz'
      "https://github.com/woodruffw/zizmor/archive/refs/tags/{{.VERSION}}.tar.gz"

  extract:
    desc: '{{.TASK}}'
    dir: '{{.ROOT_DIR}}'
    deps:
    - task: tool:aqua:tag:coreutils
    - task: download
    vars:
      VERSION: '{{env "BUILD_VERSION" | default .LATEST_VERSION}}'
    sources:
    - '{{.ROOT_DIR}}/.build/zizmor-{{.VERSION}}.tar.gz'
    generates:
    - '{{.ROOT_DIR}}/.build/{{.VERSION}}/Cargo.toml'
    cmds:
    # TODO: which tar command
    - >-
      tar -xf '{{.ROOT_DIR}}/.build/zizmor-{{.VERSION}}.tar.gz'
      -C '{{.ROOT_DIR}}/.build/{{.VERSION}}'
      --strip-components 1

  fetch:
    desc: '{{.TASK}}'
    dir: '{{.ROOT_DIR}}/.build/{{.VERSION}}'
    deps:
    - task: tool:aqua:tag:rustup
    - task: extract
    vars:
      VERSION: '{{env "BUILD_VERSION" | default .LATEST_VERSION}}'
    status:
    - coreutils test -f '{{.ROOT_DIR}}/.build/.done_fetch_{{.VERSION}}'
    sources:
    - '{{.ROOT_DIR}}/.build/{{.VERSION}}/Cargo.toml'
    generates:
    - '{{.ROOT_DIR}}/.build/.done_fetch_{{.VERSION}}'
    cmds:
    - cargo fetch --locked
    - cmd: touch '{{.ROOT_DIR}}/.build/.done_fetch_{{.VERSION}}'
      silent: true

  binary:
    desc: '{{.TASK}}'
    dir: '{{.ROOT_DIR}}/.build/{{.VERSION}}'
    deps:
    - task: tool:aqua:tag:rustup
    - task: tool:aqua:tag:cargo-zigbuild
    - task: tool:aqua:tag:zig
    - task: tool:rustup:target:{{.BUILD_TARGET}}
    - task: fetch
    vars:
      EXE: '{{if contains "-windows-" .BUILD_TARGET}}.exe{{end}}'
      VERSION: '{{env "BUILD_VERSION" | default .LATEST_VERSION}}'
    sources:
    - '{{.ROOT_DIR}}/.build/{{.VERSION}}/Cargo.toml'
    generates:
    - '{{.ROOT_DIR}}/.build/{{.VERSION}}/target/{{.BUILD_TARGET}}/release/zizmor{{.EXE}}'
    env:
      # workaround: github actions build error: deps ring: zig not found
      AQUA_GLOBAL_CONFIG: '{{.ROOT_DIR}}/.aqua/aqua.yml'
    cmds:
    - cargo zigbuild --locked --release --target={{.BUILD_TARGET}}

  prepare:
    desc: '{{.TASK}}'
    dir: '{{.ROOT_DIR}}/.build/{{.VERSION}}/target/{{.BUILD_TARGET}}/release'
    deps:
    - task: tool:aqua:tag:coreutils
    - task: binary
    vars:
      VERSION: '{{env "BUILD_VERSION" | default .LATEST_VERSION}}'
      BUILD_BINNAME: 'zizmor{{if contains "-windows-" .BUILD_TARGET}}.exe{{end}}'
      DIST_BINNAME: 'zizmor-{{.BUILD_TARGET}}{{if contains "-windows-" .BUILD_TARGET}}.exe{{end}}'
    sources:
    - '{{.BUILD_BINNAME}}'
    generates:
    - '{{.ROOT_DIR}}/.build/{{.VERSION}}/dist/{{.DIST_BINNAME}}'
    cmds:
    - cmd: coreutils mkdir -p '{{.ROOT_DIR}}/.build/{{.VERSION}}/dist'
      silent: true
    - coreutils cp '{{.BUILD_BINNAME}}' '{{.ROOT_DIR}}/.build/{{.VERSION}}/dist/{{.DIST_BINNAME}}'

  sha256sum:
    desc: '{{.TASK}}'
    dir: '{{.ROOT_DIR}}/.build/{{.VERSION}}/dist'
    deps:
    - task: tool:aqua:tag:coreutils
    - task: prepare
    vars:
      VERSION: '{{env "BUILD_VERSION" | default .LATEST_VERSION}}'
      BINNAME: 'zizmor-{{.BUILD_TARGET}}{{if contains "-windows-" .BUILD_TARGET}}.exe{{end}}'
    sources:
    - '{{.BINNAME}}'
    generates:
    - '{{.BINNAME}}.sha256sum'
    cmds:
    - coreutils sha256sum -b "{{.BINNAME}}" > "{{.BINNAME}}.sha256sum"

  sha256sum:verify:
    desc: '{{.TASK}}'
    dir: '{{.ROOT_DIR}}/.build/{{.VERSION}}/dist'
    deps:
    - task: tool:aqua:tag:coreutils
    - task: sha256sum
    vars:
      VERSION: '{{env "BUILD_VERSION" | default .LATEST_VERSION}}'
      BINNAME: 'zizmor-{{.BUILD_TARGET}}{{if contains "-windows-" .BUILD_TARGET}}.exe{{end}}'
    sources:
    - '{{.BINNAME}}'
    generates:
    - '{{.ROOT_DIR}}/.build/{{.VERSION}}/.done_sha256sum_verify'
    cmds:
    - coreutils sha256sum -c "{{.BINNAME}}.sha256sum"
    - cmd: touch '{{.ROOT_DIR}}/.build/{{.VERSION}}/.done_sha256sum_verify'
      silent: true

  cosign:
    desc: '{{.TASK}}'
    dir: '{{.ROOT_DIR}}/.build/{{.VERSION}}/dist'
    deps:
    - task: binary
    vars:
      VERSION: '{{env "BUILD_VERSION" | default .LATEST_VERSION}}'
      BINNAME: 'zizmor-{{.BUILD_TARGET}}{{if contains "-windows-" .BUILD_TARGET}}.exe{{end}}'
    status:
    - coreutils test -f '{{.BINNAME}}.cert'
    - coreutils test -f '{{.BINNAME}}.sig'
    sources:
    - '{{.BINNAME}}'
    generates:
    - '{{.BINNAME}}.cert'
    - '{{.BINNAME}}.sig'
    cmds:
    - >-
      cosign sign-blob {{.BINNAME}}
      -y
      --output-certificate {{.BINNAME}}.cert
      --output-signature {{.BINNAME}}.sig
