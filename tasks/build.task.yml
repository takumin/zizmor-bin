# https://taskfile.dev
# yaml-language-server: $schema=https://taskfile.dev/schema.json

version: '3'

set: [pipefail]
shopt: [globstar]

vars:
  BUILD_TARGET: '{{env "BUILD_TARGET" | default "x86_64-unknown-linux-musl"}}'
  MATRIX_TARGETS:
  - aarch64-apple-darwin
  - aarch64-pc-windows-msvc
  - aarch64-unknown-linux-musl
  - x86_64-apple-darwin
  - x86_64-pc-windows-msvc
  - x86_64-unknown-linux-musl

includes:
  tool:
    taskfile: tool.task.yml
    internal: true

tasks:
  default:
    desc: '{{.TASK}}'
    silent: true
    cmds:
    - task: release

  matrix:
    desc: '{{.TASK}}'
    silent: true
    deps:
    - task: tool:aqua:tag:jq
    vars:
      VERSION:
        sh: jq -r '.versions | sort_by(sub("^v";"") | split(".") | map(tonumber)) | last' versions.json
    cmds:
    - >-
      echo '{{ .MATRIX_TARGETS | toJson }}'
      | jq -cM '{include: map({version: "{{env "VERSION" | default .VERSION}}", target: .})}'

  release:
    desc: '{{.TASK}}'
    dir: '{{.ROOT_DIR}}/.build'
    deps:
    - task: tool:aqua:tag:rustup
    - task: tool:aqua:tag:cargo-zigbuild
    - task: tool:aqua:tag:zig
    - task: tool:rustup:target:{{.BUILD_TARGET}}
    sources:
    - '{{.ROOT_DIR}}/.build/Cargo.toml'
    generates:
    - '{{.ROOT_DIR}}/.build/target/{{.BUILD_TARGET}}/release/zizmor'
    cmds:
    - cmd: cp -r ../.aqua .
      silent: true
    - zig version
    - cargo zigbuild --verbose --release --target={{.BUILD_TARGET}}
